<?php

/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

namespace Test\Model\Dao;

use Mouf\Security\RightsService\MoufRight;
use Mouf\Security\RightsService\RightInterface;
use Mouf\Security\RightsService\RightsDaoInterface;
use Mouf\Security\UserService\UserDaoInterface;
use Mouf\Security\UserService\UserInterface;
use Test\Model\Bean\UserBean;
use Test\Model\Dao\Generated\UserBaseDao;

/**
 * The UserDao class will maintain the persistence of UserBean class into the user table.
 */
class UserDao extends UserBaseDao implements UserDaoInterface, RightsDaoInterface
{
    public function getUserByCredentials($login, $password)
    {
        $user = $this->findOne("email like :email", ["email" => $login]);
        if ($user && password_verify($password, $user->getPassword())){
            return $user;
        }
        return null;
    }

    public function getUserByToken($token)
    {
        // TODO: Implement getUserByToken() method.
    }

    public function discardToken($token)
    {
        // TODO: Implement discardToken() method.
    }

    public function getUserById($id)
    {
       return $this->getById($id);
    }

    public function getUserByLogin($login)
    {
        // TODO: Implement getUserByLogin() method.
    }


    public function getRightsForUser($user_id)
    {
        /** @var $user UserBean */
        $user = $this->getUserById($user_id);
        $rights = explode(",", $user->getRights());
        $ret = [];
        foreach ($rights as $right){
            $ret[] = new MoufRight($right);
        }
        return $ret;
    }

    public function getRightForUser($user_id, $right)
    {
        // TODO: Implement getRightForUser() method.
    }
}
